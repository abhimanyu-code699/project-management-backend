PORT=7001
# DB_HOST=localhost
# DB_USER=root
# DB_DATABASE=project_management
# DB_PASSWORD=my_sql_password_07
JWT_SECRET=your_jwt_secret
SMTP_USER="abhimanyukumar83097@gmail.com"
SMTP_PASS="vqcf lyxy sxdt dglk"



DB_HOST=b8tkhpejzro6sxn9zfnz-mysql.services.clever-cloud.com
DB_PORT=3306
DB_USER=ujruk2jpiiuirhoh
DB_DATABASE=b8tkhpejzro6sxn9zfnz
DB_PASSWORD=FqNM1wyvgNNbLm0uFyvG




# CREATE DATABASE IF NOT EXISTS project_management;
# USE project_management;

# -- Users table
# CREATE TABLE IF NOT EXISTS users (
#     id INT PRIMARY KEY AUTO_INCREMENT,
#     name VARCHAR(200),
#     email VARCHAR(200) NOT NULL UNIQUE,
#     phone VARCHAR(100),
#     password VARCHAR(200),
#     role ENUM('admin','manager','developer') NOT NULL,
#     created_at DATETIME DEFAULT CURRENT_TIMESTAMP
# );

# -- Tasks table
# CREATE TABLE IF NOT EXISTS tasks (
#     id INT PRIMARY KEY AUTO_INCREMENT,
#     task TEXT NOT NULL,
#     assigned_by INT NOT NULL,      -- usually a manager
#     status ENUM('to-do','in-progress','done') DEFAULT 'to-do',
#     comment TEXT,
#     created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
#     updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
#     -- Foreign key
#     CONSTRAINT fk_assigned_by FOREIGN KEY (assigned_by) REFERENCES users(id)
# );

# -- Projects table
# CREATE TABLE IF NOT EXISTS projects (
#     id INT PRIMARY KEY AUTO_INCREMENT,
#     project_name VARCHAR(200) NOT NULL,
#     manager_id INT NOT NULL,          -- only 1 manager per project
#     start_date DATETIME DEFAULT CURRENT_TIMESTAMP,
#     completion_date DATETIME,
#     status enum('to-do','in-progress','done') DEFAULT 'to-do',
    
#     CONSTRAINT fk_project_manager FOREIGN KEY (manager_id) REFERENCES users(id)
# );

# -- Many-to-many relation: developers assigned to projects
# CREATE TABLE IF NOT EXISTS project_developers (
#     project_id INT NOT NULL,
#     developer_id INT NOT NULL,
#     PRIMARY KEY (project_id, developer_id),
#     CONSTRAINT fk_proj_dev_project FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,
#     CONSTRAINT fk_proj_dev_user FOREIGN KEY (developer_id) REFERENCES users(id) ON DELETE CASCADE
# );

# -- Many-to-many relation: tasks assigned to developers within projects
# CREATE TABLE IF NOT EXISTS project_tasks (
#     project_id INT NOT NULL,
#     task_id INT NOT NULL,
#     developer_id INT NOT NULL,
#     tasks  TEXT,
#     status enum('to-do','in-progress','done') DEFAULT 'to-do',
#     PRIMARY KEY (project_id, task_id, developer_id),
#     CONSTRAINT fk_task_project FOREIGN KEY (project_id) REFERENCES projects(id) ON DELETE CASCADE,
#     CONSTRAINT fk_task FOREIGN KEY (task_id) REFERENCES tasks(id) ON DELETE CASCADE,
#     CONSTRAINT fk_task_developer FOREIGN KEY (developer_id) REFERENCES users(id) ON DELETE CASCADE
# );